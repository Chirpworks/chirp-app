"""Initial schema

Revision ID: e1c1bf16f830
Revises: 
Create Date: 2025-07-04 21:02:53.208701

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e1c1bf16f830'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agencies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exotel_calls',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('call_from', sa.String(length=15), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('call_recording_url', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('token_blocklist',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_blocklist_jti'), ['jti'], unique=False)

    op.create_table('buyers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('agency_id', sa.UUID(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('solutions_presented', sa.JSON(), nullable=True),
    sa.Column('relationship_progression', sa.Text(), nullable=True),
    sa.Column('risks', sa.JSON(), nullable=True),
    sa.Column('products_discussed', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('agency_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sellers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'MANAGER', 'USER', 'GUEST', name='sellerrole'), nullable=True),
    sa.Column('agency_id', sa.UUID(), nullable=False),
    sa.Column('manager_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['sellers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('username')
    )
    op.create_table('app_calls',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('mobile_app_call_id', sa.String(length=50), nullable=False),
    sa.Column('buyer_number', sa.String(length=15), nullable=False),
    sa.Column('seller_number', sa.String(length=15), nullable=False),
    sa.Column('call_type', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['sellers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meetings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('mobile_app_call_id', sa.String(length=50), nullable=True),
    sa.Column('buyer_id', sa.UUID(), nullable=False),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('source', sa.Enum('PHONE', 'VIDEO_CALL', 'GOOGLE_MEETS', name='meetingsource'), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transcription', sa.Text(), nullable=True),
    sa.Column('direction', sa.String(), nullable=True),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('call_purpose', sa.String(), nullable=True),
    sa.Column('key_discussion_points', sa.JSON(), nullable=True),
    sa.Column('buyer_pain_points', sa.JSON(), nullable=True),
    sa.Column('solutions_discussed', sa.JSON(), nullable=True),
    sa.Column('risks', sa.JSON(), nullable=True),
    sa.Column('summary', sa.JSON(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['buyers.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['sellers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', name='actionstatus'), nullable=False),
    sa.Column('description', sa.JSON(), nullable=True),
    sa.Column('reasoning', sa.Text(), nullable=True),
    sa.Column('signals', sa.JSON(), nullable=True),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('buyer_id', sa.UUID(), nullable=False),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['buyers.id'], ),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['sellers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('INIT', 'IN_PROGRESS', 'COMPLETED', 'FAILURE', name='jobstatus'), nullable=True),
    sa.Column('s3_audio_url', sa.String(length=150), nullable=True),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('meeting_id'),
    sa.UniqueConstraint('s3_audio_url')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('jobs')
    op.drop_table('actions')
    op.drop_table('meetings')
    op.drop_table('app_calls')
    op.drop_table('sellers')
    op.drop_table('products')
    op.drop_table('buyers')
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_blocklist_jti'))

    op.drop_table('token_blocklist')
    op.drop_table('exotel_calls')
    op.drop_table('agencies')
    # ### end Alembic commands ###
